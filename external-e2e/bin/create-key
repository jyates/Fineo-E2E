#!/usr/bin/env ruby
# An api key for e2e testing

# include the "lib" directory
File.expand_path(File.join(__dir__, "..", "lib")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

# include the "common" directory
File.expand_path(File.join(__dir__, "..", "common")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

require 'optparse'
require 'ostruct'
require 'aws/api-gateway'

options = OpenStruct.new()
OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options]"
  opts.separator "Create an API key\n\tNew key is written to std out."

  opts.on('-c', '--credentials FILE', "Location of the credentials FILE to use.") do |s|
    options.credentials = s
  end

  opts.on("--suffix SUFFIX", "Suffix to append to the name of key") do |suffix|
    options.suffix = suffix
  end

  opts.on("--out FILE", "Location to write the full key properties") do |out|
    options.out = out
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!(ARGV)

client = Fineo::Aws::ApiGateway.new(options.credentials, false)

# create the key
key = client.create_key(options.suffix)

# and echo it to the console
puts key.id

exit 0 unless options.out

require 'json'
map = {
  id: key.id,
  value: key.value,
  name: key.name,
  description: key.description,
  enabled: key.enabled
}
File.write(options.out, JSON.pretty_generate(map))

