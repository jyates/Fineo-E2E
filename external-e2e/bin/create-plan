#!/usr/bin/env ruby
# Setup an external api key for e2e testing

# include the "lib" directory
File.expand_path(File.join(__dir__, "..", "lib")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

# include the "common" directory
File.expand_path(File.join(__dir__, "..", "common")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

require 'optparse'
require 'ostruct'
require 'aws/api-gateway'
require 'json'

options = OpenStruct.new(apis: [])
OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options]"
  opts.separator "Create a usage plan that includes the specified apis and api key"

  opts.on("--api-key ID", "ID of the api key to add to the generated plan") do |key|
    options.key = key
  end

  opts.on("--api API_ID", "ID of API that should be included in the plan. REPEATABLE") do |plan|
    options.apis << plan
  end

  opts.on("-o", "--out FILE", "Where to write the resulting usage plan ID. Default: [Console]") do |file|
    options.out = file
  end

  opts.on('-c', '--credentials FILE', "Location of the credentials FILE to use.") do |s|
    options.credentials = s
  end

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options.verbose = v
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!(ARGV)

# create a plan that allows access to the given api stages
client = Fineo::Aws::ApiGateway.new(options.credentials, options.verbose)
resp = client.create_plan(options.apis)
client.add_to_plan(resp.id, options.key)

output = {
  id: resp.id,  
  name:resp.name,
  description: resp.description,
  api_stages: resp.api_stages  
}

require 'json'
content = JSON.pretty_generate(output)
if options.out
  File.write(options.out, content)
else
  puts content
end
