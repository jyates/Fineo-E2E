#!/usr/bin/env ruby
# Convert a stack name into an api id

File.expand_path(File.join(__dir__, "..", "lib")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

# include the "common" directory
File.expand_path(File.join(__dir__, "..", "common")).tap {|pwd|
  $LOAD_PATH.unshift(pwd) unless $LOAD_PATH.include?(pwd)
}

require 'optparse'
require 'ostruct'
require 'aws/credentials'

options = OpenStruct.new
OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options]"
  opts.separator "Convert a stack name into its API ID"

  opts.on("--stack NAME", "Name of the cloudformation stack") do |name|
    options.name = name
  end

  opts.on('-c', '--credentials FILE', "Location of the credentials FILE to use.") do |s|
    options.credentials = s
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end.parse!(ARGV)

creds = Fineo::Aws::Credentials.load(options.credentials)
info = {
  credentials: creds,
  validate_params: true,
  log_level: :debug
}
resource = Aws::CloudFormation::Resource.new(info)
cloudformation =  Aws::CloudFormation::Client.new(info)

stack = resource.stack(options.name)
found = false
begin
  stack.resource_summaries.each{|resource|
    id = resource.logical_id
    sr = stack.resource(id)
    # assume only 1 RestApi per stack
    next unless sr.resource_type == "AWS::ApiGateway::RestApi"

    # found the id - output that
    puts sr.physical_resource_id
    found = true
    break
  }
rescue StopIteration
end

raise "No API found for stack: #{options.name}" unless found